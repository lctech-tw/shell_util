name: testing.golang.v1
on:
  workflow_call:
    inputs:
      DB_TABLE_NAME:
        description: "DB table name"
        required: true
        type: string
      GO_BUILD_PATH:
        description: "File [main.go] path"
        required: false
        type: string
        default: "./cmd/server/"
      PRE_TEST_SCRIPT_PATH:
        description: "Pre test script path"
        required: false
        type: string
        default: "./.github/testing"
      PRE_TEST_SCRIPT_FILE:
        description: "Pre test script file"
        required: false
        type: string
        default: "psql-init.sh"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: ⚙️ Obtain GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN=$(npx obtain-github-app-installation-access-token ci ${{secrets.GH_APP_CREDENTIALS_TOKEN}})
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"
      - name: ⚙️ Setting GitHub Auth
        run: git config --global url."https://oauth2:$GITHUB_TOKEN@github.com/lctech-tw".insteadOf "https://github.com/lctech-tw"
        env:
          GITHUB_TOKEN: ${{steps.githubAppAuth.outputs.token}}
      - name: ⚙️ Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
      - name: ⚙️ Setup Golang caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{runner.os}}-golang-${{hashFiles('**/go.sum')}}
          restore-keys: |
            ${{runner.os}}-golang-
      - name: ⚙️ Init db server
        run: |
          docker run -it --rm -p 6379:6379 redis &
          docker run --rm --name psql \
                      -p 5432:5432 \
                      -e POSTGRES_USER=postgres \
                      -e POSTGRES_PASSWORD=12345678 \
                      -e POSTGRES_DB=${{inputs.DB_TABLE_NAME}} \
                      -e POSTGRES_ENCODING=UTF8 \
                      -e POSTGRES_LC_ALL=en_US.UTF-8 \
                      -v ${{inputs.PRE_TEST_SCRIPT_PATH}}/:/test/ \
                      -d postgres &
          until PGPASSWORD=12345678 psql -U postgres -h 127.0.0.1 -p 5432 -w &>/dev/null
          do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
          docker exec -t psql bash /test/${{inputs.PRE_TEST_SCRIPT_FILE}} &
      - name: ⚙️ Build Golang
        run: |
          cd ${{inputs.GO_BUILD_PATH}} && go build . && cd -
          go mod vendor
          go test -v ./...
